{"version":3,"file":"component---src-pages-index-js-1562b583f6275ae507cf.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/seo.js","webpack://my-gatsby-site/./src/pages/index.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const products = data.allProductsJson.edges;\r\n\r\n  const filteredProducts = products.filter(({ node }) =>\r\n    node.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"Home\" />\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Welcome to Deleens Home Bake</h1>\r\n        <p className=\"lead\">Delicious homemade baked goods made with love.</p>\r\n        <hr className=\"my-4\" />\r\n        <p>Explore our range of products and find your favorite treat!</p>\r\n        <a className=\"btn btn-primary btn-lg\" href=\"#products\" role=\"button\">Shop Now</a>\r\n      </div>\r\n      <div id=\"products\" className=\"container py-5\">\r\n        <h2 className=\"h3 mb-4\">Our Products</h2>\r\n        <div className=\"mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          {filteredProducts.map(({ node }) => (\r\n            <div key={node.id} className=\"col-md-4 mb-4\">\r\n              <div className=\"card h-100\">\r\n                {node.image?.childImageSharp ? (\r\n                  <GatsbyImage\r\n                    className=\"card-img-top\"\r\n                    image={getImage(node.image.childImageSharp)}\r\n                    alt={node.name}\r\n                  />\r\n                ) : (\r\n                  <p>No image available</p>\r\n                )}\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{node.name}</h5>\r\n                  <p className=\"card-text\">${node.price}</p>\r\n                  <Link to={`/products/${node.id}`} className=\"btn btn-primary\">View Details</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allProductsJson {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          price\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 400)\r\n            }\r\n          }\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default IndexPage;\r\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","Seo","data","searchTerm","setSearchTerm","filteredProducts","allProductsJson","edges","filter","_ref2","node","toLowerCase","includes","Layout","className","href","role","id","type","placeholder","value","onChange","e","target","map","_ref3","_node$image","key","image","childImageSharp","GatsbyImage","getImage","alt","price","Link","to"],"sourceRoot":""}