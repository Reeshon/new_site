{"version":3,"file":"component---src-pages-products-js-e2c06086a7b7a6c85bb3.js","mappings":"6IA4CA,IAlCA,SAAYA,GAAoC,IAADC,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUL,EAC3C,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAe,GAAGN,OAAWM,IAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAU,KACnEJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EAGP,C,0ECkBA,UArDqBL,IAAe,IAAd,KAAEgB,GAAMhB,EAC5B,MAAMiB,EAAWD,EAAKE,gBAAgBC,MAEtC,OACER,EAAAA,cAACS,EAAAA,EAAM,KACLT,EAAAA,cAACU,EAAAA,EAAG,CAACjB,MAAM,aACXO,EAAAA,cAAA,OAAKW,UAAU,kBACbX,EAAAA,cAAA,MAAIW,UAAU,kBAAiB,gBAC/BX,EAAAA,cAAA,OAAKW,UAAU,OACZL,EAASM,KAAIC,IAAA,IAAAC,EAAA,IAAC,KAAEC,GAAMF,EAAA,OACrBb,EAAAA,cAAA,OAAKgB,IAAKD,EAAKE,GAAIN,UAAU,iBAC3BX,EAAAA,cAAA,OAAKW,UAAU,cACF,QAAVG,EAAAC,EAAKG,aAAK,IAAAJ,GAAVA,EAAYK,gBACXnB,EAAAA,cAACoB,EAAAA,EAAW,CACVT,UAAU,eACVO,OAAOG,EAAAA,EAAAA,GAASN,EAAKG,MAAMC,iBAC3BG,IAAKP,EAAKd,OAGZD,EAAAA,cAAA,SAAG,sBAELA,EAAAA,cAAA,OAAKW,UAAU,aACbX,EAAAA,cAAA,MAAIW,UAAU,cAAcI,EAAKd,MACjCD,EAAAA,cAAA,KAAGW,UAAU,aAAY,IAAEI,EAAKQ,SAGhC,MAIL,C","sources":["webpack://my-gatsby-site/./src/components/seo.js","webpack://my-gatsby-site/./src/pages/products.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\n\r\nconst ProductsPage = ({ data }) => {\r\n  const products = data.allProductsJson.edges;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Products\" />\r\n      <div className=\"container py-5\">\r\n        <h1 className=\"display-4 mb-4\">Our Products</h1>\r\n        <div className=\"row\">\r\n          {products.map(({ node }) => (\r\n            <div key={node.id} className=\"col-md-4 mb-4\">\r\n              <div className=\"card h-100\">\r\n                {node.image?.childImageSharp ? (\r\n                  <GatsbyImage\r\n                    className=\"card-img-top\"\r\n                    image={getImage(node.image.childImageSharp)}\r\n                    alt={node.name}\r\n                  />\r\n                ) : (\r\n                  <p>No image available</p>\r\n                )}\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{node.name}</h5>\r\n                  <p className=\"card-text\">${node.price}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allProductsJson {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          price\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 400)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ProductsPage;"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","data","products","allProductsJson","edges","Layout","SEO","className","map","_ref2","_node$image","node","key","id","image","childImageSharp","GatsbyImage","getImage","alt","price"],"sourceRoot":""}